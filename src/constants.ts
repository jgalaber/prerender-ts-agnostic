import http from 'http';
import https from 'https';

import { escapeRegex } from './core/regex-utils';

export const CRAWLER_USER_AGENTS = Array.from(
  new Set([
    'googlebot',
    'Google-InspectionTool',
    'Yahoo! Slurp',
    'bingbot',
    'yandex',
    'baiduspider',
    'facebookexternalhit',
    'twitterbot',
    'rogerbot',
    'linkedinbot',
    'embedly',
    'quora link preview',
    'showyoubot',
    'outbrain',
    'pinterest/0.',
    'developers.google.com/+/web/snippet',
    'slackbot',
    'vkShare',
    'W3C_Validator',
    'redditbot',
    'Applebot',
    'WhatsApp',
    'flipboard',
    'tumblr',
    'bitlybot',
    'SkypeUriPreview',
    'nuzzel',
    'Discordbot',
    'Google Page Speed',
    'Qwantify',
    'pinterestbot',
    'Bitrix link preview',
    'XING-contenttabreceiver',
    'Chrome-Lighthouse',
    'TelegramBot',
    'SeznamBot',
    'screaming frog SEO spider',
    'AhrefsBot',
    'AhrefsSiteAudit',
    'Iframely',
    'OpenAI/ChatGPT',
    'ChatGPT-User',
    'GPTBot',
    'ChatGPT-User/1.0',
    'Anthropic/Claude',
    'anthropic-ai',
    'Google-Extended',
    'GoogleOther',
    'Microsoft/Bing AI',
    'BingBot/AI',
    'BingPreview',
    'Perplexity',
    'Perplexitybot',
    'PerplexityBot/1.0',
    'Cohere',
    'Cohere-ai',
    'cohere-crawler',
    'ByteDance/TikTok',
    'Bytespider',
    'BytespiderBot',
    'Baiduspider-render',
    'Baiduspider-AI',
    'YourBot',
    'You-bot',
    'NeevaBot',
    'Hugging-Face-AI',
    'HuggingFaceBot',
    'LinkedInBot/AI',
    'facebookexternalhit/AI',
    'FacebookBot',
    'Twitterbot',
    'CCBot',
    'AIResearchBot',
    'research-crawler',
    'Diffbot',
    'ScaleAI',
    'scale-crawler',
  ]),
);

export var CRAWLER_UA_REGEX = new RegExp(
  '(?:' + CRAWLER_USER_AGENTS.map(escapeRegex).join('|') + ')',
  'i',
);

export const EXTENSIONS_TO_IGNORE = Array.from(
  new Set([
    '.js',
    '.css',
    '.xml',
    '.less',
    '.png',
    '.jpg',
    '.jpeg',
    '.gif',
    '.pdf',
    '.doc',
    '.txt',
    '.ico',
    '.rss',
    '.zip',
    '.mp3',
    '.rar',
    '.exe',
    '.wmv',
    '.avi',
    '.ppt',
    '.mpg',
    '.mpeg',
    '.tif',
    '.wav',
    '.mov',
    '.psd',
    '.ai',
    '.xls',
    '.mp4',
    '.m4a',
    '.swf',
    '.dat',
    '.dmg',
    '.iso',
    '.flv',
    '.m4v',
    '.torrent',
    '.woff',
    '.woff2',
    '.ttf',
    '.svg',
    '.webmanifest',
    '.webp',
  ]),
);
const EXT_NAMES = EXTENSIONS_TO_IGNORE.map((e) => e.replace(/^\./, ''));
export var EXT_IGNORE_REGEX = new RegExp(`\\.(?:${EXT_NAMES.map(escapeRegex).join('|')})$`, 'i');

export const HTTP_ADAPTERS: { [key: string]: typeof http | typeof https } = {
  'http:': http,
  'https:': https,
};

export const PRERENDER_SERVICE_URL = 'https://service.prerender.io/';
